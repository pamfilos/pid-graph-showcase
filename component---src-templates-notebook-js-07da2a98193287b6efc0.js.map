{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Badge.js","webpack:///./src/templates/notebook.js"],"names":["Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","query","NotebookPage","data","jupyterNotebook","html","internal","content","fields","codemeta","name","identifier","datePublished","version","publisher","notebook","JSON","parse"],"mappings":"+PAQIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAAYL,EAAKK,UACjBC,EAAUN,EAAKO,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CG,EAAQ,YAA8BT,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFU,EAAS,YAAmBR,EAAU,SAC1C,OAAoB,IAAMS,cAAcH,EAAW,YAAS,CAC1DP,IAAKA,GACJQ,EAAO,CACRJ,UAAW,IAAWA,EAAWK,EAAQN,GAAQM,EAAS,QAASP,GAAWO,EAAS,IAAMP,SAGjGL,EAAMc,YAAc,QACpBd,EAAMe,aApBa,CACjBT,MAAM,GAoBO,Q,qBCCFU,EAAK,aA4BHC,UA7CM,SAAC,GAAc,IAAD,IAAXC,KACmEC,gBADxD,KAC3BC,KAD2B,EACrBC,UADqB,gBACU,GADV,GACTC,eADS,MACC,KADD,MACcC,OADd,gBAC4C,GAD5C,GACwBC,gBADxB,MACmC,KADnC,EAEjC,OACE,kBAAC,IAAD,KACE,6BACA,4BAAKA,EAASC,MACd,kBAAC,EAAD,CAAOpB,QAAQ,QAAQmB,EAASE,YAAoB,IACpD,kBAAC,EAAD,CAAOrB,QAAQ,aAAf,mBAA4CmB,EAASG,eAAuB,IAC5E,kBAAC,EAAD,CAAOtB,QAAQ,QAAf,YAAgCmB,EAASI,SAAiB,IAC1D,kBAAC,EAAD,CAAOvB,QAAQ,aAAf,cAAuCmB,EAASK,WAAmB,IACnE,6BACA,6BAAK,6BACL,kBAAC,IAAD,CAAiBC,SAAUC,KAAKC,MAAMV","file":"component---src-templates-notebook-js-07da2a98193287b6efc0.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Tabs, Tab, Badge } from 'react-bootstrap';\n\nimport NotebookPreview from \"@nteract/notebook-preview\";\n\nconst NotebookPage = ({ data }) => {\n  let { html, internal: { content = null } = {}, fields: { codemeta = null } = {} } = data.jupyterNotebook;\n  return (\n    <Layout>\n      <hr />\n      <h2>{codemeta.name}</h2>\n      <Badge variant=\"info\">{codemeta.identifier}</Badge>{' '}\n      <Badge variant=\"secondary\">Date Published: {codemeta.datePublished}</Badge>{' '}\n      <Badge variant=\"dark\">Version: {codemeta.version}</Badge>{' '}\n      <Badge variant=\"secondary\">Publisher: {codemeta.publisher}</Badge>{' '}\n      <h2/>\n      <br/><hr />\n      <NotebookPreview notebook={JSON.parse(content)} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    jupyterNotebook(fields: { slug: { eq: $slug } }) {\n        html\n        internal {\n          content\n        }\n        fields {\n          codemeta {\n            identifier\n            codeRepository\n            controlledTem\n            datePublished\n            dateModified\n            dateCreated\n            description\n            isAutomatedBuild\n            issueTracker\n            licenseId\n            publisher\n            name\n            version\n          }\n        }\n    }\n  }\n`\n\nexport default NotebookPage\n"],"sourceRoot":""}