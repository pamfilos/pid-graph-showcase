{"componentChunkName":"component---src-templates-notebook-js","path":"/pidgraph-notebooks-python/user-story-4-open-access/py-open-access-with-output/","result":{"data":{"jupyterNotebook":{"html":"<div class=\"notebook-render\"><div class=\"sc-iwsKbI Dticx\"><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-gZMcBi gmeReZ\"><table>\n<thead>\n<tr>\n<th><a>FREYA</a> WP2 <a>User Story 4</a></th>\n<th>As a funder I want to see how many of the research outputs funded by me have an open license enabling reuse, so that I am sure I properly support Open Science.</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<p>Funders that support open research are interested in monitoring the extent of open access given to the outputs of grants they award - while the grant is active as well as retrospectively. \nThis notebook uses the <a>DataCite GraphQL API</a> to retrieve and report license types of outputs of the following funders to date:</p>\n<ul>\n<li><a>DFG (Deutsche Forschungsgemeinschaft, Germany)</a></li>\n<li><a>ANR (Agence Nationale de la Recherche, France)</a></li>\n<li><a>SNF (Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung, Switzerland)</a></li>\n</ul>\n<p><strong>Goal</strong>: By the end of this notebook you should be able to:</p>\n<ul>\n<li>Retrieve licenses across all output types for three different funders; </li>\n<li>Plot interactive bar plots showing for each funder respectively the proportion of outputs:</li>\n<li>issued under a given license type (including no license);</li>\n<li>per output type (&quot;Dataset&quot; and &quot;Text&quot;), issued under a given license type (including no license).\nPlease note that &quot;Text&quot; output type includes publications.</li>\n</ul></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-gZMcBi gmeReZ\"><h2>Install libraries and prepare GraphQL client</h2></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-bZQynM ivRWoJ\"><div class=\"sc-bxivhb hjplrr\">[1]</div><pre class=\"sc-EHOje jvzENE input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#393A34\">%</span><span class=\"token\" style=\"color:#393A34\">%</span>capture\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Install required Python packages</span>\n!pip install gql requests numpy plotnine</code></pre></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-bZQynM ivRWoJ\"><div class=\"sc-bxivhb hjplrr\">[2]</div><pre class=\"sc-EHOje jvzENE input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#008000;font-style:italic\"># Prepare the GraphQL client</span>\n<span class=\"token\" style=\"color:#0000ff\">import</span> requests\n<span class=\"token\" style=\"color:#0000ff\">from</span> IPython<span class=\"token\" style=\"color:#393A34\">.</span>display <span class=\"token\" style=\"color:#0000ff\">import</span> display<span class=\"token\" style=\"color:#393A34\">,</span> Markdown\n<span class=\"token\" style=\"color:#0000ff\">from</span> gql <span class=\"token\" style=\"color:#0000ff\">import</span> gql<span class=\"token\" style=\"color:#393A34\">,</span> Client\n<span class=\"token\" style=\"color:#0000ff\">from</span> gql<span class=\"token\" style=\"color:#393A34\">.</span>transport<span class=\"token\" style=\"color:#393A34\">.</span>requests <span class=\"token\" style=\"color:#0000ff\">import</span> RequestsHTTPTransport\n\n_transport <span class=\"token\" style=\"color:#393A34\">=</span> RequestsHTTPTransport<span class=\"token\" style=\"color:#393A34\">(</span>\n    url<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&#x27;https://api.datacite.org/graphql&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    use_json<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">,</span>\n<span class=\"token\" style=\"color:#393A34\">)</span>\n\nclient <span class=\"token\" style=\"color:#393A34\">=</span> Client<span class=\"token\" style=\"color:#393A34\">(</span>\n    transport<span class=\"token\" style=\"color:#393A34\">=</span>_transport<span class=\"token\" style=\"color:#393A34\">,</span>\n    fetch_schema_from_transport<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">,</span>\n<span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-gZMcBi gmeReZ\"><h2>Define and run GraphQL query</h2>\n<p>Define the GraphQL query to find all outputs  and associated licenses for three different funders: <a>DFG (Deutsche Forschungsgemeinschaft, Germany)</a>, <a>ANR (Agence Nationale de la Recherche, France)</a> and  <a>SNF (Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung, Switzerland)</a>).</p></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-bZQynM ivRWoJ\"><div class=\"sc-bxivhb hjplrr\">[26]</div><pre class=\"sc-EHOje jvzENE input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#008000;font-style:italic\"># Generate the GraphQL query: find all outputs and their associated licenses (where available) </span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># for three different funders, identified by funder1, funder2 and funder3.</span>\nquery_params <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span>\n    <span class=\"token\" style=\"color:#A31515\">&quot;funder1&quot;</span> <span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&quot;https://doi.org/10.13039/501100001659&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#A31515\">&quot;funder2&quot;</span> <span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&quot;https://doi.org/10.13039/501100001665&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#A31515\">&quot;funder3&quot;</span> <span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&quot;https://doi.org/10.13039/501100001711&quot;</span>\n<span class=\"token\" style=\"color:#393A34\">}</span>\n\nfunderId2Acronym <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span>\n    <span class=\"token\" style=\"color:#A31515\">&quot;https://doi.org/10.13039/501100001659&quot;</span> <span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&quot;DFG&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#A31515\">&quot;https://doi.org/10.13039/501100001665&quot;</span> <span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&quot;ANR&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#A31515\">&quot;https://doi.org/10.13039/501100001711&quot;</span> <span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&quot;SNF&quot;</span>\n<span class=\"token\" style=\"color:#393A34\">}</span>\n\nquery <span class=\"token\" style=\"color:#393A34\">=</span> gql<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token,triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;query getGrantOutputsForFundersById(\n    $funder1: ID!,\n    $funder2: ID!,\n    $funder3: ID!\n    )\n{\nfunder1: funder(id: $funder1) {\n  name\n  id\n  works {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }        \n    }\n  },\nfunder2: funder(id: $funder2) {\n  name\n  id\n  works {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }        \n    }\n  },\nfunder3: funder(id: $funder3) {\n  name\n  id\n  works {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }        \n    }\n  },\nfunder1Dataset: funder(id: $funder1) {\n  name\n  id\n  works(resourceTypeId: &quot;Dataset&quot;) {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }        \n    }\n  },\nfunder1Text: funder(id: $funder1) {\n  name\n  id\n  works(resourceTypeId: &quot;Text&quot;) {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }        \n    }\n  },\nfunder2Dataset: funder(id: $funder2) {\n  name\n  id\n  works(resourceTypeId: &quot;Dataset&quot;) {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }       \n    }\n  },\nfunder2Text: funder(id: $funder2) {\n  name\n  id\n  works(resourceTypeId: &quot;Text&quot;) {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }        \n    }\n  },\nfunder3Dataset: funder(id: $funder3) {\n  name\n  id\n  works(resourceTypeId: &quot;Dataset&quot;) {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }       \n    }\n  },\nfunder3Text: funder(id: $funder3) {\n  name\n  id\n  works(resourceTypeId: &quot;Text&quot;) {\n      totalCount\n      licenses {\n        id\n        title\n        count\n      }        \n    }\n  } \n}\n&quot;&quot;&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-gZMcBi gmeReZ\"><p>Run the above query via the GraphQL client</p></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-bZQynM ivRWoJ\"><div class=\"sc-bxivhb hjplrr\">[27]</div><pre class=\"sc-EHOje jvzENE input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">import</span> json\ndata <span class=\"token\" style=\"color:#393A34\">=</span> client<span class=\"token\" style=\"color:#393A34\">.</span>execute<span class=\"token\" style=\"color:#393A34\">(</span>query<span class=\"token\" style=\"color:#393A34\">,</span> variable_values<span class=\"token\" style=\"color:#393A34\">=</span>json<span class=\"token\" style=\"color:#393A34\">.</span>dumps<span class=\"token\" style=\"color:#393A34\">(</span>query_params<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-gZMcBi gmeReZ\"><h2>Display bar plot of number of outputs per license type and funder.</h2>\n<p>Plot an interactive bar plot showing the proportion of outputs issued under a given license type, for each funder.</p></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-bZQynM ivRWoJ\"><div class=\"sc-bxivhb hjplrr\">[28]</div><pre class=\"sc-EHOje jvzENE input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">import</span> plotly<span class=\"token\" style=\"color:#393A34\">.</span>io <span class=\"token\" style=\"color:#0000ff\">as</span> pio\n<span class=\"token\" style=\"color:#0000ff\">import</span> plotly<span class=\"token\" style=\"color:#393A34\">.</span>express <span class=\"token\" style=\"color:#0000ff\">as</span> px\n<span class=\"token\" style=\"color:#0000ff\">from</span> IPython<span class=\"token\" style=\"color:#393A34\">.</span>display <span class=\"token\" style=\"color:#0000ff\">import</span> IFrame\n<span class=\"token\" style=\"color:#0000ff\">import</span> pandas <span class=\"token\" style=\"color:#0000ff\">as</span> pd\n<span class=\"token\" style=\"color:#0000ff\">from</span> operator <span class=\"token\" style=\"color:#0000ff\">import</span> itemgetter\n<span class=\"token\" style=\"color:#0000ff\">import</span> re\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Adapted from: https://stackoverflow.com/questions/58766305/is-there-any-way-to-implement-stacked-or-grouped-bar-charts-in-plotly-express</span>\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">px_stacked_bar</span><span class=\"token\" style=\"color:#393A34\">(</span>df<span class=\"token\" style=\"color:#393A34\">,</span> color_name<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&#x27;License Type&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span> y_name<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&#x27;Metrics&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#393A34\">**</span>pxargs<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    idx_col <span class=\"token\" style=\"color:#393A34\">=</span> df<span class=\"token\" style=\"color:#393A34\">.</span>index<span class=\"token\" style=\"color:#393A34\">.</span>name\n    m <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>melt<span class=\"token\" style=\"color:#393A34\">(</span>df<span class=\"token\" style=\"color:#393A34\">.</span>reset_index<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span> id_vars<span class=\"token\" style=\"color:#393A34\">=</span>idx_col<span class=\"token\" style=\"color:#393A34\">,</span> var_name<span class=\"token\" style=\"color:#393A34\">=</span>color_name<span class=\"token\" style=\"color:#393A34\">,</span> value_name<span class=\"token\" style=\"color:#393A34\">=</span>y_name<span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># For Plotly colour sequences see: https://plotly.com/python/discrete-color/     </span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> px<span class=\"token\" style=\"color:#393A34\">.</span>bar<span class=\"token\" style=\"color:#393A34\">(</span>m<span class=\"token\" style=\"color:#393A34\">,</span> x<span class=\"token\" style=\"color:#393A34\">=</span>idx_col<span class=\"token\" style=\"color:#393A34\">,</span> y<span class=\"token\" style=\"color:#393A34\">=</span>y_name<span class=\"token\" style=\"color:#393A34\">,</span> color<span class=\"token\" style=\"color:#393A34\">=</span>color_name<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#393A34\">**</span>pxargs<span class=\"token\" style=\"color:#393A34\">,</span> \n                  color_discrete_sequence<span class=\"token\" style=\"color:#393A34\">=</span>px<span class=\"token\" style=\"color:#393A34\">.</span>colors<span class=\"token\" style=\"color:#393A34\">.</span>qualitative<span class=\"token\" style=\"color:#393A34\">.</span>Pastel1<span class=\"token\" style=\"color:#393A34\">)</span>\n \n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">get_grouped_license_type</span><span class=\"token\" style=\"color:#393A34\">(</span>licenseId<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    ret <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">None</span>\n    <span class=\"token\" style=\"color:#0000ff\">if</span> re<span class=\"token\" style=\"color:#393A34\">.</span>search<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&#x27;cc-by-&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span> licenseId<span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#0000ff\">is</span> <span class=\"token\" style=\"color:#0000ff\">not</span> <span class=\"token\" style=\"color:#36acaa\">None</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        ret <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#A31515\">&quot;cc-by&quot;</span>\n    <span class=\"token\" style=\"color:#0000ff\">elif</span> re<span class=\"token\" style=\"color:#393A34\">.</span>search<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&#x27;cc0-&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span> licenseId<span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#0000ff\">is</span> <span class=\"token\" style=\"color:#0000ff\">not</span> <span class=\"token\" style=\"color:#36acaa\">None</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        ret <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#A31515\">&quot;cc0&quot;</span>\n    <span class=\"token\" style=\"color:#0000ff\">elif</span> licenseId <span class=\"token\" style=\"color:#0000ff\">is</span> <span class=\"token\" style=\"color:#0000ff\">not</span> <span class=\"token\" style=\"color:#36acaa\">None</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        ret <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#A31515\">&quot;other&quot;</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> ret \n            \nqueries <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;funder1&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#A31515\">&#x27;funder2&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#A31515\">&#x27;funder3&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Map each license type to a dict that in turn maps the position of the output&#x27;s bar in plot </span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># to the count of outputs corresponding to that license type.</span>\nlicenseType2Pos2Count <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Under the assumption of one license per work, for each funder licenseType2Pos2Count[&quot;No license&quot;] is instantiated</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># with the totalCount of works for that funder. Any work counts for a license found in funder[&#x27;works&#x27;][&#x27;licenses&#x27;]</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># will be subtracted from licenseType2Pos2Count[&quot;No license&quot;] for that funder, in the end leaving the number of </span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># works with no license.</span>\nlicenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;No license&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\n<span class=\"token\" style=\"color:#0000ff\">for</span> pos1 <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token,builtin\">range</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token,builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>queries<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Initialise (no) license&#x27;s counts for each funder  </span>\n    query <span class=\"token\" style=\"color:#393A34\">=</span> queries<span class=\"token\" style=\"color:#393A34\">[</span>pos1<span class=\"token\" style=\"color:#393A34\">]</span>\n    <span class=\"token\" style=\"color:#0000ff\">if</span> query <span class=\"token\" style=\"color:#0000ff\">in</span> data<span class=\"token\" style=\"color:#393A34\">:</span>\n        licenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;No license&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>pos1<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> data<span class=\"token\" style=\"color:#393A34\">[</span>query<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;works&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;totalCount&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    \n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Populate license type counts per funder</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># labels contains funder labels in bar plot - each bar corresponds to a single funder</span>\nlabels <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\npos <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">0</span>\n<span class=\"token\" style=\"color:#0000ff\">for</span> query <span class=\"token\" style=\"color:#0000ff\">in</span> queries<span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token\" style=\"color:#0000ff\">if</span> query <span class=\"token\" style=\"color:#0000ff\">in</span> data<span class=\"token\" style=\"color:#393A34\">:</span>\n        funder <span class=\"token\" style=\"color:#393A34\">=</span> data<span class=\"token\" style=\"color:#393A34\">[</span>query<span class=\"token\" style=\"color:#393A34\">]</span>\n        labels<span class=\"token\" style=\"color:#393A34\">[</span>pos<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> funderId2Acronym<span class=\"token\" style=\"color:#393A34\">[</span>funder<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;id&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    \n        <span class=\"token\" style=\"color:#0000ff\">for</span> license <span class=\"token\" style=\"color:#0000ff\">in</span> funder<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;works&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;licenses&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            outputCount <span class=\"token\" style=\"color:#393A34\">=</span> license<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;count&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n            licenseId <span class=\"token\" style=\"color:#393A34\">=</span> get_grouped_license_type<span class=\"token\" style=\"color:#393A34\">(</span>license<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;id&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span>\n            <span class=\"token\" style=\"color:#0000ff\">if</span> licenseId <span class=\"token\" style=\"color:#0000ff\">not</span> <span class=\"token\" style=\"color:#0000ff\">in</span> licenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">:</span>\n                licenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">[</span>licenseId<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\n                <span class=\"token\" style=\"color:#0000ff\">for</span> pos1 <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token,builtin\">range</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token,builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>queries<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Initialise license&#x27;s counts for each funder</span>\n                    licenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">[</span>licenseId<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>pos1<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">0</span>\n                \n            licenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">[</span>licenseId<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>pos<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">+=</span> outputCount\n            licenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;No license&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>pos<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">-=</span> outputCount\n    pos <span class=\"token\" style=\"color:#393A34\">+=</span> <span class=\"token\" style=\"color:#36acaa\">1</span>\n        \n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Create stacked bar plot</span>\nx_name <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#A31515\">&quot;Funders&quot;</span>\ndfDict <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span>x_name<span class=\"token\" style=\"color:#393A34\">:</span> labels<span class=\"token\" style=\"color:#393A34\">}</span>\n\n<span class=\"token\" style=\"color:#0000ff\">for</span> license <span class=\"token\" style=\"color:#0000ff\">in</span> licenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">:</span>\n    dfDict<span class=\"token\" style=\"color:#393A34\">[</span>license<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> licenseType2Pos2Count<span class=\"token\" style=\"color:#393A34\">[</span>license<span class=\"token\" style=\"color:#393A34\">]</span>\n\ndf <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span>dfDict<span class=\"token\" style=\"color:#393A34\">)</span>\nfig <span class=\"token\" style=\"color:#393A34\">=</span> px_stacked_bar<span class=\"token\" style=\"color:#393A34\">(</span>df<span class=\"token\" style=\"color:#393A34\">.</span>set_index<span class=\"token\" style=\"color:#393A34\">(</span>x_name<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span> y_name <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#A31515\">&quot;Output Counts&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Set plot background to transparent</span>\nfig<span class=\"token\" style=\"color:#393A34\">.</span>update_layout<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span>\n<span class=\"token\" style=\"color:#A31515\">&#x27;plot_bgcolor&#x27;</span><span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&#x27;rgba(0, 0, 0, 0)&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n<span class=\"token\" style=\"color:#A31515\">&#x27;paper_bgcolor&#x27;</span><span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&#x27;rgba(0, 0, 0, 0)&#x27;</span>\n<span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Write interactive plot out to html file</span>\npio<span class=\"token\" style=\"color:#393A34\">.</span>write_html<span class=\"token\" style=\"color:#393A34\">(</span>fig<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token,builtin\">file</span><span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&#x27;out.html&#x27;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Display plot from the saved html file</span>\ndisplay<span class=\"token\" style=\"color:#393A34\">(</span>Markdown<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;&lt;br /&gt;License types of all funder&#x27;s outputs to date, shown as a stacked bar plot - one bar per funder:&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\nIFrame<span class=\"token\" style=\"color:#393A34\">(</span>src<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;./out.html&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span> width<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">500</span><span class=\"token\" style=\"color:#393A34\">,</span> height<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">500</span><span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div><div class=\"sc-gzVnrw jFzGrB\"></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-gZMcBi gmeReZ\"><h2>Plot output counts per license type, funder and year</h2>\n<p>Plot an interactive bar plot showing for each funder the proportion of outputs published in a given year under a given license type.</p></div></div><div class=\"sc-dnqmqq iXBJUB\"><div class=\"sc-bZQynM ivRWoJ\"><div class=\"sc-bxivhb hjplrr\">[29]</div><pre class=\"sc-EHOje jvzENE input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">import</span> plotly<span class=\"token\" style=\"color:#393A34\">.</span>express <span class=\"token\" style=\"color:#0000ff\">as</span> px\n<span class=\"token\" style=\"color:#0000ff\">import</span> re\n\nxstr <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#0000ff\">lambda</span> s<span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#A31515\">&#x27;General&#x27;</span> <span class=\"token\" style=\"color:#0000ff\">if</span> s <span class=\"token\" style=\"color:#0000ff\">is</span> <span class=\"token\" style=\"color:#36acaa\">None</span> <span class=\"token\" style=\"color:#0000ff\">else</span> <span class=\"token,builtin\">str</span><span class=\"token\" style=\"color:#393A34\">(</span>s<span class=\"token\" style=\"color:#393A34\">)</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Populate license type counts per funder</span>\nfunderQueryLabels <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;funder1&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#A31515\">&#x27;funder2&#x27;</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#A31515\">&#x27;funder3&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span>\noutputTypeLabels <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;Dataset&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#A31515\">&quot;Text&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\nfunder2resType2licenceType2outputCount <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># funderAcronym2Name is needed for the plot legend - as funder names are too long to be shown in the plot itself</span>\nfunderAcronym2Name <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Collect license type counts data into funder2resType2licenceType2outputCount</span>\n<span class=\"token\" style=\"color:#0000ff\">for</span> funderQueryLabel <span class=\"token\" style=\"color:#0000ff\">in</span> funderQueryLabels<span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> outputType <span class=\"token\" style=\"color:#0000ff\">in</span> outputTypeLabels<span class=\"token\" style=\"color:#393A34\">:</span>\n        query <span class=\"token\" style=\"color:#393A34\">=</span> funderQueryLabel <span class=\"token\" style=\"color:#393A34\">+</span> outputType\n        <span class=\"token\" style=\"color:#0000ff\">if</span> query <span class=\"token\" style=\"color:#0000ff\">in</span> data<span class=\"token\" style=\"color:#393A34\">:</span>\n            funder <span class=\"token\" style=\"color:#393A34\">=</span> data<span class=\"token\" style=\"color:#393A34\">[</span>query<span class=\"token\" style=\"color:#393A34\">]</span>\n            funderAcronym <span class=\"token\" style=\"color:#393A34\">=</span> funderId2Acronym<span class=\"token\" style=\"color:#393A34\">[</span>funder<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;id&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span>\n            funderAcronym2Name<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> funder<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;name&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n            <span class=\"token\" style=\"color:#0000ff\">if</span> funderAcronym <span class=\"token\" style=\"color:#0000ff\">not</span> <span class=\"token\" style=\"color:#0000ff\">in</span> funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">:</span>\n                funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\n            <span class=\"token\" style=\"color:#0000ff\">if</span> outputType <span class=\"token\" style=\"color:#0000ff\">not</span> <span class=\"token\" style=\"color:#0000ff\">in</span> funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\n            \n            <span class=\"token\" style=\"color:#008000;font-style:italic\"># Under the assumption of one license per work, for each funder</span>\n            <span class=\"token\" style=\"color:#008000;font-style:italic\"># funder2resType2licenceType2outputCount[funderAcronym][outputType][&quot;No license&quot;] is instantiated</span>\n            <span class=\"token\" style=\"color:#008000;font-style:italic\"># with the totalCount of works for that funder and outputType. Any work counts for a license found in funder[&#x27;works&#x27;][&#x27;licenses&#x27;]</span>\n            <span class=\"token\" style=\"color:#008000;font-style:italic\"># will be subtracted from funder2resType2licenceType2outputCount[funderAcronym][outputType][&quot;No license&quot;] for that funder, </span>\n            <span class=\"token\" style=\"color:#008000;font-style:italic\"># in the end leaving the number of works with no license.</span>\n            <span class=\"token\" style=\"color:#0000ff\">if</span> <span class=\"token\" style=\"color:#A31515\">&quot;No license&quot;</span> <span class=\"token\" style=\"color:#0000ff\">not</span> <span class=\"token\" style=\"color:#0000ff\">in</span> funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;No license&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> funder<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;works&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;totalCount&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n            \n            <span class=\"token\" style=\"color:#0000ff\">for</span> license <span class=\"token\" style=\"color:#0000ff\">in</span> funder<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;works&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;licenses&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                outputCount <span class=\"token\" style=\"color:#393A34\">=</span> license<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;count&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n                licenseId <span class=\"token\" style=\"color:#393A34\">=</span> get_grouped_license_type<span class=\"token\" style=\"color:#393A34\">(</span>license<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&#x27;id&#x27;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span>\n                <span class=\"token\" style=\"color:#0000ff\">if</span> licenseId <span class=\"token\" style=\"color:#0000ff\">not</span> <span class=\"token\" style=\"color:#0000ff\">in</span> funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                    funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>licenseId<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">0</span>\n                funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>licenseId<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">+=</span> outputCount\n                funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;No license&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">-=</span> outputCount\n            \n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Populate data structures for faceted stacked bar plot</span>\nfunders<span class=\"token\" style=\"color:#393A34\">,</span> outputTypes<span class=\"token\" style=\"color:#393A34\">,</span> licenseTypes<span class=\"token\" style=\"color:#393A34\">,</span> outputCounts  <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span>\npos <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">0</span>\n<span class=\"token\" style=\"color:#0000ff\">for</span> funder <span class=\"token\" style=\"color:#0000ff\">in</span> funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> outputType <span class=\"token\" style=\"color:#0000ff\">in</span> funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funder<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>          \n        <span class=\"token\" style=\"color:#0000ff\">for</span> licenseType <span class=\"token\" style=\"color:#0000ff\">in</span> funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funder<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            funders<span class=\"token\" style=\"color:#393A34\">[</span>pos<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> funder\n            outputTypes<span class=\"token\" style=\"color:#393A34\">[</span>pos<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> outputType                   \n            licenseTypes<span class=\"token\" style=\"color:#393A34\">[</span>pos<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> licenseType           \n            outputCounts<span class=\"token\" style=\"color:#393A34\">[</span>pos<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> funder2resType2licenceType2outputCount<span class=\"token\" style=\"color:#393A34\">[</span>funder<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>outputType<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>licenseType<span class=\"token\" style=\"color:#393A34\">]</span>\n            pos <span class=\"token\" style=\"color:#393A34\">+=</span> <span class=\"token\" style=\"color:#36acaa\">1</span>\ndfDict <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#A31515\">&quot;Funder&quot;</span><span class=\"token\" style=\"color:#393A34\">:</span> funders<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#A31515\">&quot;Output Type&quot;</span><span class=\"token\" style=\"color:#393A34\">:</span> outputTypes<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#A31515\">&quot;License&quot;</span><span class=\"token\" style=\"color:#393A34\">:</span> licenseTypes<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#A31515\">&quot;Output Count&quot;</span><span class=\"token\" style=\"color:#393A34\">:</span> outputCounts<span class=\"token\" style=\"color:#393A34\">}</span>\ndf1 <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span>dfDict<span class=\"token\" style=\"color:#393A34\">)</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Create funders legend</span>\ntableBody<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;&quot;</span>\n<span class=\"token\" style=\"color:#0000ff\">for</span> funderAcronym <span class=\"token\" style=\"color:#0000ff\">in</span> funderAcronym2Name<span class=\"token\" style=\"color:#393A34\">:</span>\n    tableBody <span class=\"token\" style=\"color:#393A34\">+=</span> <span class=\"token\" style=\"color:#A31515\">&quot;%s | %s\\n&quot;</span> <span class=\"token\" style=\"color:#393A34\">%</span> <span class=\"token\" style=\"color:#393A34\">(</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">,</span> funderAcronym2Name<span class=\"token\" style=\"color:#393A34\">[</span>funderAcronym<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\nfig2 <span class=\"token\" style=\"color:#393A34\">=</span> px<span class=\"token\" style=\"color:#393A34\">.</span>bar<span class=\"token\" style=\"color:#393A34\">(</span>df1<span class=\"token\" style=\"color:#393A34\">,</span> x<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;Output Type&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span> y<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;Output Count&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span> color<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;License&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span> barmode<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;stack&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n             facet_row<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;Funder&quot;</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\">#            facet_col=&quot;&quot;</span>\n            <span class=\"token\" style=\"color:#393A34\">)</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># fig2.update_traces(texttemplate=&#x27;%{text:}&#x27;, textposition=&#x27;inside&#x27;)</span>\nfig2<span class=\"token\" style=\"color:#393A34\">.</span>update_layout<span class=\"token\" style=\"color:#393A34\">(</span>uniformtext_minsize<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">8</span><span class=\"token\" style=\"color:#393A34\">,</span> uniformtext_mode<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&#x27;hide&#x27;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Write interactive plot out to html file</span>\npio<span class=\"token\" style=\"color:#393A34\">.</span>write_html<span class=\"token\" style=\"color:#393A34\">(</span>fig2<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token,builtin\">file</span><span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&#x27;out2.html&#x27;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># Display plot from the saved html file</span>\nmarkDownContent<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;&lt;br /&gt;Fo each funder, the plot below shows counts of all outputs to date of type %s, corresponding to a given license type.&quot;</span> <span class=\"token\" style=\"color:#393A34\">+</span> \\\n<span class=\"token\" style=\"color:#A31515\">&quot;&lt;br /&gt;Full information is shown when you mouse-over a bar.&quot;</span> <span class=\"token\" style=\"color:#393A34\">+</span> \\\n<span class=\"token\" style=\"color:#A31515\">&quot;&lt;br /&gt;&quot;</span>\ndisplay<span class=\"token\" style=\"color:#393A34\">(</span>Markdown<span class=\"token\" style=\"color:#393A34\">(</span>markDownContent <span class=\"token\" style=\"color:#393A34\">%</span> <span class=\"token\" style=\"color:#A31515\">&quot; or &quot;</span><span class=\"token\" style=\"color:#393A34\">.</span>join<span class=\"token\" style=\"color:#393A34\">(</span>outputTypeLabels<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\ndisplay<span class=\"token\" style=\"color:#393A34\">(</span>Markdown<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;| Acronym | Funder Name|\\n|---|---|\\n%s&quot;</span> <span class=\"token\" style=\"color:#393A34\">%</span> tableBody<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\nIFrame<span class=\"token\" style=\"color:#393A34\">(</span>src<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;./out2.html&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span> width<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">500</span><span class=\"token\" style=\"color:#393A34\">,</span> height<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">700</span><span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div><div class=\"sc-gzVnrw jFzGrB\"></div></div></div></div>","internal":{"content":"{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"  [FREYA](https://www.project-freya.eu/en) WP2 [User Story 4](https://github.com/datacite/pidgraph-notebooks-python/issues/8) | As a funder I want to see how many of the research outputs funded by me have an open license enabling reuse, so that I am sure I properly support Open Science. \\n\",\n    \" :------------- | :------------- | :-------------\\n\",\n    \"\\n\",\n    \"Funders that support open research are interested in monitoring the extent of open access given to the outputs of grants they award - while the grant is active as well as retrospectively. <p />\\n\",\n    \"This notebook uses the [DataCite GraphQL API](https://api.datacite.org/graphql) to retrieve and report license types of outputs of the following funders to date:\\n\",\n    \" - [DFG (Deutsche Forschungsgemeinschaft, Germany)](https://doi.org/10.13039/501100001659)\\n\",\n    \" - [ANR (Agence Nationale de la Recherche, France)](https://doi.org/10.13039/501100001665)\\n\",\n    \" - [SNF (Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung, Switzerland)](https://doi.org/10.13039/501100001711)\\n\",\n    \"\\n\",\n    \"**Goal**: By the end of this notebook you should be able to:\\n\",\n    \"- Retrieve licenses across all output types for three different funders; \\n\",\n    \"- Plot interactive bar plots showing for each funder respectively the proportion of outputs:\\n\",\n    \" - issued under a given license type (including no license);\\n\",\n    \" - per output type (\\\"Dataset\\\" and \\\"Text\\\"), issued under a given license type (including no license).<br />\\n\",\n    \"   Please note that \\\"Text\\\" output type includes publications.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"## Install libraries and prepare GraphQL client\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"%%capture\\n\",\n    \"# Install required Python packages\\n\",\n    \"!pip install gql requests numpy plotnine\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"# Prepare the GraphQL client\\n\",\n    \"import requests\\n\",\n    \"from IPython.display import display, Markdown\\n\",\n    \"from gql import gql, Client\\n\",\n    \"from gql.transport.requests import RequestsHTTPTransport\\n\",\n    \"\\n\",\n    \"_transport = RequestsHTTPTransport(\\n\",\n    \"    url='https://api.datacite.org/graphql',\\n\",\n    \"    use_json=True,\\n\",\n    \")\\n\",\n    \"\\n\",\n    \"client = Client(\\n\",\n    \"    transport=_transport,\\n\",\n    \"    fetch_schema_from_transport=True,\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"## Define and run GraphQL query\\n\",\n    \"Define the GraphQL query to find all outputs  and associated licenses for three different funders: [DFG (Deutsche Forschungsgemeinschaft, Germany)](https://doi.org/10.13039/501100001659), [ANR (Agence Nationale de la Recherche, France)](https://doi.org/10.13039/501100001665) and  [SNF (Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung, Switzerland)](https://doi.org/10.13039/501100001711)).\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 26,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"# Generate the GraphQL query: find all outputs and their associated licenses (where available) \\n\",\n    \"# for three different funders, identified by funder1, funder2 and funder3.\\n\",\n    \"query_params = {\\n\",\n    \"    \\\"funder1\\\" : \\\"https://doi.org/10.13039/501100001659\\\",\\n\",\n    \"    \\\"funder2\\\" : \\\"https://doi.org/10.13039/501100001665\\\",\\n\",\n    \"    \\\"funder3\\\" : \\\"https://doi.org/10.13039/501100001711\\\"\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"funderId2Acronym = {\\n\",\n    \"    \\\"https://doi.org/10.13039/501100001659\\\" : \\\"DFG\\\",\\n\",\n    \"    \\\"https://doi.org/10.13039/501100001665\\\" : \\\"ANR\\\",\\n\",\n    \"    \\\"https://doi.org/10.13039/501100001711\\\" : \\\"SNF\\\"\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"query = gql(\\\"\\\"\\\"query getGrantOutputsForFundersById(\\n\",\n    \"    $funder1: ID!,\\n\",\n    \"    $funder2: ID!,\\n\",\n    \"    $funder3: ID!\\n\",\n    \"    )\\n\",\n    \"{\\n\",\n    \"funder1: funder(id: $funder1) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }        \\n\",\n    \"    }\\n\",\n    \"  },\\n\",\n    \"funder2: funder(id: $funder2) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }        \\n\",\n    \"    }\\n\",\n    \"  },\\n\",\n    \"funder3: funder(id: $funder3) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }        \\n\",\n    \"    }\\n\",\n    \"  },\\n\",\n    \"funder1Dataset: funder(id: $funder1) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works(resourceTypeId: \\\"Dataset\\\") {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }        \\n\",\n    \"    }\\n\",\n    \"  },\\n\",\n    \"funder1Text: funder(id: $funder1) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works(resourceTypeId: \\\"Text\\\") {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }        \\n\",\n    \"    }\\n\",\n    \"  },\\n\",\n    \"funder2Dataset: funder(id: $funder2) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works(resourceTypeId: \\\"Dataset\\\") {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }       \\n\",\n    \"    }\\n\",\n    \"  },\\n\",\n    \"funder2Text: funder(id: $funder2) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works(resourceTypeId: \\\"Text\\\") {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }        \\n\",\n    \"    }\\n\",\n    \"  },\\n\",\n    \"funder3Dataset: funder(id: $funder3) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works(resourceTypeId: \\\"Dataset\\\") {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }       \\n\",\n    \"    }\\n\",\n    \"  },\\n\",\n    \"funder3Text: funder(id: $funder3) {\\n\",\n    \"  name\\n\",\n    \"  id\\n\",\n    \"  works(resourceTypeId: \\\"Text\\\") {\\n\",\n    \"      totalCount\\n\",\n    \"      licenses {\\n\",\n    \"        id\\n\",\n    \"        title\\n\",\n    \"        count\\n\",\n    \"      }        \\n\",\n    \"    }\\n\",\n    \"  } \\n\",\n    \"}\\n\",\n    \"\\\"\\\"\\\")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Run the above query via the GraphQL client\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 27,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import json\\n\",\n    \"data = client.execute(query, variable_values=json.dumps(query_params))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"## Display bar plot of number of outputs per license type and funder.\\n\",\n    \"Plot an interactive bar plot showing the proportion of outputs issued under a given license type, for each funder.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 28,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/markdown\": [\n       \"<br />License types of all funder's outputs to date, shown as a stacked bar plot - one bar per funder:\"\n      ],\n      \"text/plain\": [\n       \"<IPython.core.display.Markdown object>\"\n      ]\n     },\n     \"metadata\": {},\n     \"output_type\": \"display_data\"\n    },\n    {\n     \"data\": {\n      \"text/html\": [\n       \"\\n\",\n       \"        <iframe\\n\",\n       \"            width=\\\"500\\\"\\n\",\n       \"            height=\\\"500\\\"\\n\",\n       \"            src=\\\"./out.html\\\"\\n\",\n       \"            frameborder=\\\"0\\\"\\n\",\n       \"            allowfullscreen\\n\",\n       \"        ></iframe>\\n\",\n       \"        \"\n      ],\n      \"text/plain\": [\n       \"<IPython.lib.display.IFrame at 0x11e023438>\"\n      ]\n     },\n     \"execution_count\": 28,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"import plotly.io as pio\\n\",\n    \"import plotly.express as px\\n\",\n    \"from IPython.display import IFrame\\n\",\n    \"import pandas as pd\\n\",\n    \"from operator import itemgetter\\n\",\n    \"import re\\n\",\n    \"\\n\",\n    \"# Adapted from: https://stackoverflow.com/questions/58766305/is-there-any-way-to-implement-stacked-or-grouped-bar-charts-in-plotly-express\\n\",\n    \"def px_stacked_bar(df, color_name='License Type', y_name='Metrics', **pxargs):\\n\",\n    \"    idx_col = df.index.name\\n\",\n    \"    m = pd.melt(df.reset_index(), id_vars=idx_col, var_name=color_name, value_name=y_name)\\n\",\n    \"    # For Plotly colour sequences see: https://plotly.com/python/discrete-color/     \\n\",\n    \"    return px.bar(m, x=idx_col, y=y_name, color=color_name, **pxargs, \\n\",\n    \"                  color_discrete_sequence=px.colors.qualitative.Pastel1)\\n\",\n    \" \\n\",\n    \"def get_grouped_license_type(licenseId):\\n\",\n    \"    ret = None\\n\",\n    \"    if re.search('cc-by-', licenseId) is not None:\\n\",\n    \"        ret = \\\"cc-by\\\"\\n\",\n    \"    elif re.search('cc0-', licenseId) is not None:\\n\",\n    \"        ret = \\\"cc0\\\"\\n\",\n    \"    elif licenseId is not None:\\n\",\n    \"        ret = \\\"other\\\"\\n\",\n    \"    return ret \\n\",\n    \"            \\n\",\n    \"queries = ['funder1', 'funder2', 'funder3']\\n\",\n    \"# Map each license type to a dict that in turn maps the position of the output's bar in plot \\n\",\n    \"# to the count of outputs corresponding to that license type.\\n\",\n    \"licenseType2Pos2Count = {}\\n\",\n    \"\\n\",\n    \"# Under the assumption of one license per work, for each funder licenseType2Pos2Count[\\\"No license\\\"] is instantiated\\n\",\n    \"# with the totalCount of works for that funder. Any work counts for a license found in funder['works']['licenses']\\n\",\n    \"# will be subtracted from licenseType2Pos2Count[\\\"No license\\\"] for that funder, in the end leaving the number of \\n\",\n    \"# works with no license.\\n\",\n    \"licenseType2Pos2Count[\\\"No license\\\"] = {}\\n\",\n    \"for pos1 in range(0, len(queries)):\\n\",\n    \"    # Initialise (no) license's counts for each funder  \\n\",\n    \"    query = queries[pos1]\\n\",\n    \"    if query in data:\\n\",\n    \"        licenseType2Pos2Count[\\\"No license\\\"][pos1] = data[query]['works']['totalCount']\\n\",\n    \"    \\n\",\n    \"# Populate license type counts per funder\\n\",\n    \"# labels contains funder labels in bar plot - each bar corresponds to a single funder\\n\",\n    \"labels = {}\\n\",\n    \"pos = 0\\n\",\n    \"for query in queries:\\n\",\n    \"    if query in data:\\n\",\n    \"        funder = data[query]\\n\",\n    \"        labels[pos] = funderId2Acronym[funder['id']]\\n\",\n    \"    \\n\",\n    \"        for license in funder['works']['licenses']:\\n\",\n    \"            outputCount = license['count']\\n\",\n    \"            licenseId = get_grouped_license_type(license['id'])\\n\",\n    \"            if licenseId not in licenseType2Pos2Count:\\n\",\n    \"                licenseType2Pos2Count[licenseId] = {}\\n\",\n    \"                for pos1 in range(0, len(queries)):\\n\",\n    \"                    # Initialise license's counts for each funder\\n\",\n    \"                    licenseType2Pos2Count[licenseId][pos1] = 0\\n\",\n    \"                \\n\",\n    \"            licenseType2Pos2Count[licenseId][pos] += outputCount\\n\",\n    \"            licenseType2Pos2Count[\\\"No license\\\"][pos] -= outputCount\\n\",\n    \"    pos += 1\\n\",\n    \"        \\n\",\n    \"# Create stacked bar plot\\n\",\n    \"x_name = \\\"Funders\\\"\\n\",\n    \"dfDict = {x_name: labels}\\n\",\n    \"\\n\",\n    \"for license in licenseType2Pos2Count:\\n\",\n    \"    dfDict[license] = licenseType2Pos2Count[license]\\n\",\n    \"\\n\",\n    \"df = pd.DataFrame(dfDict)\\n\",\n    \"fig = px_stacked_bar(df.set_index(x_name), y_name = \\\"Output Counts\\\")\\n\",\n    \"\\n\",\n    \"# Set plot background to transparent\\n\",\n    \"fig.update_layout({\\n\",\n    \"'plot_bgcolor': 'rgba(0, 0, 0, 0)',\\n\",\n    \"'paper_bgcolor': 'rgba(0, 0, 0, 0)'\\n\",\n    \"})\\n\",\n    \"\\n\",\n    \"# Write interactive plot out to html file\\n\",\n    \"pio.write_html(fig, file='out.html')\\n\",\n    \"\\n\",\n    \"# Display plot from the saved html file\\n\",\n    \"display(Markdown(\\\"<br />License types of all funder's outputs to date, shown as a stacked bar plot - one bar per funder:\\\"))\\n\",\n    \"IFrame(src=\\\"./out.html\\\", width=500, height=500)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"## Plot output counts per license type, funder and year\\n\",\n    \"Plot an interactive bar plot showing for each funder the proportion of outputs published in a given year under a given license type.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 29,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/markdown\": [\n       \"<br />Fo each funder, the plot below shows counts of all outputs to date of type Dataset or Text, corresponding to a given license type.<br />Full information is shown when you mouse-over a bar.<br />\"\n      ],\n      \"text/plain\": [\n       \"<IPython.core.display.Markdown object>\"\n      ]\n     },\n     \"metadata\": {},\n     \"output_type\": \"display_data\"\n    },\n    {\n     \"data\": {\n      \"text/markdown\": [\n       \"| Acronym | Funder Name|\\n\",\n       \"|---|---|\\n\",\n       \"DFG | Deutsche Forschungsgemeinschaft\\n\",\n       \"ANR | Agence Nationale de la Recherche\\n\",\n       \"SNF | Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung\\n\"\n      ],\n      \"text/plain\": [\n       \"<IPython.core.display.Markdown object>\"\n      ]\n     },\n     \"metadata\": {},\n     \"output_type\": \"display_data\"\n    },\n    {\n     \"data\": {\n      \"text/html\": [\n       \"\\n\",\n       \"        <iframe\\n\",\n       \"            width=\\\"500\\\"\\n\",\n       \"            height=\\\"700\\\"\\n\",\n       \"            src=\\\"./out2.html\\\"\\n\",\n       \"            frameborder=\\\"0\\\"\\n\",\n       \"            allowfullscreen\\n\",\n       \"        ></iframe>\\n\",\n       \"        \"\n      ],\n      \"text/plain\": [\n       \"<IPython.lib.display.IFrame at 0x11e7fdeb8>\"\n      ]\n     },\n     \"execution_count\": 29,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"import plotly.express as px\\n\",\n    \"import re\\n\",\n    \"\\n\",\n    \"xstr = lambda s: 'General' if s is None else str(s)\\n\",\n    \"\\n\",\n    \"# Populate license type counts per funder\\n\",\n    \"funderQueryLabels = ['funder1', 'funder2', 'funder3']\\n\",\n    \"outputTypeLabels = [\\\"Dataset\\\", \\\"Text\\\"]\\n\",\n    \"\\n\",\n    \"funder2resType2licenceType2outputCount = {}\\n\",\n    \"# funderAcronym2Name is needed for the plot legend - as funder names are too long to be shown in the plot itself\\n\",\n    \"funderAcronym2Name = {}\\n\",\n    \"\\n\",\n    \"# Collect license type counts data into funder2resType2licenceType2outputCount\\n\",\n    \"for funderQueryLabel in funderQueryLabels:\\n\",\n    \"    for outputType in outputTypeLabels:\\n\",\n    \"        query = funderQueryLabel + outputType\\n\",\n    \"        if query in data:\\n\",\n    \"            funder = data[query]\\n\",\n    \"            funderAcronym = funderId2Acronym[funder['id']]\\n\",\n    \"            funderAcronym2Name[funderAcronym] = funder['name']\\n\",\n    \"            if funderAcronym not in funder2resType2licenceType2outputCount:\\n\",\n    \"                funder2resType2licenceType2outputCount[funderAcronym] = {}\\n\",\n    \"            if outputType not in funder2resType2licenceType2outputCount[funderAcronym]:\\n\",\n    \"                funder2resType2licenceType2outputCount[funderAcronym][outputType] = {}\\n\",\n    \"            \\n\",\n    \"            # Under the assumption of one license per work, for each funder\\n\",\n    \"            # funder2resType2licenceType2outputCount[funderAcronym][outputType][\\\"No license\\\"] is instantiated\\n\",\n    \"            # with the totalCount of works for that funder and outputType. Any work counts for a license found in funder['works']['licenses']\\n\",\n    \"            # will be subtracted from funder2resType2licenceType2outputCount[funderAcronym][outputType][\\\"No license\\\"] for that funder, \\n\",\n    \"            # in the end leaving the number of works with no license.\\n\",\n    \"            if \\\"No license\\\" not in funder2resType2licenceType2outputCount[funderAcronym][outputType]:\\n\",\n    \"                funder2resType2licenceType2outputCount[funderAcronym][outputType][\\\"No license\\\"] = funder['works']['totalCount']\\n\",\n    \"            \\n\",\n    \"            for license in funder['works']['licenses']:\\n\",\n    \"                outputCount = license['count']\\n\",\n    \"                licenseId = get_grouped_license_type(license['id'])\\n\",\n    \"                if licenseId not in funder2resType2licenceType2outputCount[funderAcronym][outputType]:\\n\",\n    \"                    funder2resType2licenceType2outputCount[funderAcronym][outputType][licenseId] = 0\\n\",\n    \"                funder2resType2licenceType2outputCount[funderAcronym][outputType][licenseId] += outputCount\\n\",\n    \"                funder2resType2licenceType2outputCount[funderAcronym][outputType][\\\"No license\\\"] -= outputCount\\n\",\n    \"            \\n\",\n    \"\\n\",\n    \"# Populate data structures for faceted stacked bar plot\\n\",\n    \"funders, outputTypes, licenseTypes, outputCounts  = ({}, {}, {}, {})\\n\",\n    \"pos = 0\\n\",\n    \"for funder in funder2resType2licenceType2outputCount:\\n\",\n    \"    for outputType in funder2resType2licenceType2outputCount[funder]:          \\n\",\n    \"        for licenseType in funder2resType2licenceType2outputCount[funder][outputType]:\\n\",\n    \"            funders[pos] = funder\\n\",\n    \"            outputTypes[pos] = outputType                   \\n\",\n    \"            licenseTypes[pos] = licenseType           \\n\",\n    \"            outputCounts[pos] = funder2resType2licenceType2outputCount[funder][outputType][licenseType]\\n\",\n    \"            pos += 1\\n\",\n    \"dfDict = {\\\"Funder\\\": funders, \\\"Output Type\\\": outputTypes, \\\"License\\\": licenseTypes, \\\"Output Count\\\": outputCounts}\\n\",\n    \"df1 = pd.DataFrame(dfDict)\\n\",\n    \"\\n\",\n    \"# Create funders legend\\n\",\n    \"tableBody=\\\"\\\"\\n\",\n    \"for funderAcronym in funderAcronym2Name:\\n\",\n    \"    tableBody += \\\"%s | %s\\\\n\\\" % (funderAcronym, funderAcronym2Name[funderAcronym])\\n\",\n    \"\\n\",\n    \"fig2 = px.bar(df1, x=\\\"Output Type\\\", y=\\\"Output Count\\\", color=\\\"License\\\", barmode=\\\"stack\\\",\\n\",\n    \"             facet_row=\\\"Funder\\\"\\n\",\n    \"#            facet_col=\\\"\\\"\\n\",\n    \"            )\\n\",\n    \"# fig2.update_traces(texttemplate='%{text:}', textposition='inside')\\n\",\n    \"fig2.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\\n\",\n    \"\\n\",\n    \"# Write interactive plot out to html file\\n\",\n    \"pio.write_html(fig2, file='out2.html')\\n\",\n    \"\\n\",\n    \"# Display plot from the saved html file\\n\",\n    \"markDownContent=\\\"<br />Fo each funder, the plot below shows counts of all outputs to date of type %s, corresponding to a given license type.\\\" + \\\\\\n\",\n    \"\\\"<br />Full information is shown when you mouse-over a bar.\\\" + \\\\\\n\",\n    \"\\\"<br />\\\"\\n\",\n    \"display(Markdown(markDownContent % \\\" or \\\".join(outputTypeLabels)))\\n\",\n    \"display(Markdown(\\\"| Acronym | Funder Name|\\\\n|---|---|\\\\n%s\\\" % tableBody))\\n\",\n    \"\\n\",\n    \"IFrame(src=\\\"./out2.html\\\", width=500, height=700)\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.6.1\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 4\n}\n"},"fields":{"codemeta":{"identifier":"","codeRepository":"https://github.com/datacite/pidgraph-notebooks-python/tree/master/user-story-4-open-access","controlledTem":"software","datePublished":"2020-05-10","dateModified":"2020-06-10","dateCreated":"2020-05-10","description":"Jupyter notebook that uses GraphQL to implement EC-funded FREYA Project User Story 4: As a funder I want to see how many of the research outputs funded by me have an open license enabling reuse, so that I am sure I properly support Open Science.","isAutomatedBuild":true,"issueTracker":"https://github.com/datacite/pidgraph-notebooks-python/issues","licenseId":"MIT","publisher":"DataCite","name":"FREYA PID Graph - License Types","version":"1.1.1"}}}},"pageContext":{"slug":"/pidgraph-notebooks-python/user-story-4-open-access/py-open-access-with-output/"}}}